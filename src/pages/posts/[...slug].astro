---
import BaseLayout from "../../layouts/BaseLayout.astro";

const builderAPIpublicKey = "add3bfefbde24699aeb53c5a1ad64377";
// const builderModelName = "blogpost"
const handleError = (err) => {
    // The requested Builder content could not be found.
    if (err.response.status === 404) {
        return { data: null };
    }
    throw err;
};

export async function getStaticPaths() {
    const builderAPIpublicKey = "add3bfefbde24699aeb53c5a1ad64377";

    const baseURL = "https://astro-builder-restapi.netlify.app/";
    const handleError = (err) => {
        // The requested Builder content could not be found.
        if (err.response.status === 404) {
            return { data: null };
        }
        throw err;
    };

    const { results: posts } = await fetch(
        `https://cdn.builder.io/api/v2/content/blogpost?apiKey=${builderAPIpublicKey}&fields=id,name,data.slug,data.title`
    )
        .then((res) => res.json())
        .catch(handleError);

    return posts.map(({ data: { slug, title } }) => [
        {
            params: { slug },
            props: { title },
        },
        {
            params: { slug: `${slug}/builder-preview` },
            props: { isPreview: true },
        },
    ]);
}
const { slug } = Astro.params;
const { title, isPreview } = Astro.props;

const encodedUrl = encodeURIComponent(Astro.request.url);

const { html: postHTML } = await fetch(
    `https://cdn.builder.io/api/v1/qwik/blogpost?apiKey=${builderAPIpublicKey}&url=${encodedUrl}&limit=1`
)
    .then((res) => res.json())
    .catch(handleError);
---

<BaseLayout pageTitle={title}>
    {
        isPreview ? (
            <>
                <builder-component
                    model="blogpost"
                    api-key={builderAPIpublicKey}
                />
                <script async src="https://cdn.builder.io/js/webcomponents" />
            </>
        ) : (
            <Fragment set:html={postHTML} />
        )
    }
</BaseLayout>
